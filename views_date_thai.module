<?php

/**
 * Implementation of hook_views_api().
 */
function views_date_thai_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'views_date_thai'),
  );
}

/**
 * Implementation of hook_views_data_alter().
 */
function views_date_thai_views_data_alter(&$data) {
  foreach ($data as $table => $config) {
    foreach ($config as $item => $item_config) {
      if (isset($item_config['field']['handler']) && $item_config['field']['handler'] == 'views_handler_field_date') {
        $data[$table][$item]['field']['handler'] = 'views_date_thai_handler_field_date';
      }
    }
  }
  return $data;
}

/**
 * Implementation of hook_views_handlers().
 */
function views_date_thai_views_handlers() {
  return array(
    'info' => array(
      'path' => drupal_get_path('module', 'views_date_thai') . '/handlers',
    ),
    'handlers' => array(
      'views_date_thai_handler_field_date' => array(
        'parent' => 'views_handler_field_date',
        'file' => 'views_date_thai_handler_field_date.inc',
      ),
    ),
  );
}

/**
 * Update: 21Feb14
 * - Alert the display/formatting result
 */
function views_date_thai_date_formatter_dates_alter(&$dates, $context) {
    $date1Object = $dates['value']['local']['object'];
  if($date1Object) $date1ts = $date1Object->format("U");
    $date2Object = $dates['value2']['local']['object'];
  if($date2Object) $date2ts = $date2Object->format("U");
    $format = $context['format'];
    $is_thai = $context['entity']->language;
  if($is_thai == 'th'){
    if($date1ts==$date2ts){
      $formatted_date = views_date_thai_get_formatted_date($date1ts, $format);
      $dates['value']['formatted'] = $formatted_date;
      $dates['value2']['formatted'] = $formatted_date;
    }
    else{
      $dates['value']['formatted'] = views_date_thai_get_formatted_date($date1ts, $format);;
      $dates['value2']['formatted'] = views_date_thai_get_formatted_date($date2ts, $format);;
    }
  }
}

/**
 * Update: 21Feb14
 * - helper function to get formated date in buddhist
 */
function views_date_thai_get_formatted_date($timestamp, $format){
  views_date_thai_escape_year($format);
  $formatted_date = format_date($timestamp, 'custom', $format);
  views_date_thai_replace_year($timestamp, $formatted_date);
  return $formatted_date;
}

/**
 * Update: 21Feb14
 * - helper function to escape year string from format
 */
function views_date_thai_escape_year(&$format){
  if(strpos($format,'y') !== false){
    $format = str_replace('y','[\y\y]',$format);
  }

  if(strpos($format,'Y') !== false){
    $format = str_replace('Y','[\Y\Y\Y\Y]',$format);
  }
}

/**
 * Update: 21Feb14
 * - helper function to replace escaped formatted year string with buddhist year
 */
function views_date_thai_replace_year($timestamp, &$formatted_date_with_escape){

  if(strpos($formatted_date_with_escape, '[yy]')!==false){
    $old = (int)date('y',  $timestamp);
    $new = $old+43;
    $formatted_date_with_escape = str_replace('[yy]',$new, $formatted_date_with_escape);
  }

  if(strpos($formatted_date_with_escape, '[YYYY]')!==false){
    $old = (int)date('Y',  $timestamp);
    $new = $old+543;
    $formatted_date_with_escape = str_replace('[YYYY]',$new, $formatted_date_with_escape);
  }
}


/**
 * Implements hook_process_node().
 *
 * Use hook_process_node() rather than hook_preprocess_node() as themes might
 * override the submitted variable unconditionally.
 */
function views_date_thai_process_node(&$variables) {
  $node = $variables['elements']['#node'];
  $view_mode = $variables['view_mode'];
  $variables['date'] = views_date_thai_get_formatted_date($node->created,'l, F j, Y - H:i');
  $variables['submitted'] = t('Submitted by !username on !datetime', 
    array(
      '!username' => $variables['name'],
      '!datetime' => $variables['date']
      ));
}
